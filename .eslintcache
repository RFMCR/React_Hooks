[{"D:\\Roberto\\REACT\\react-hooks\\src\\index.js":"1","D:\\Roberto\\REACT\\react-hooks\\src\\App.js":"2","D:\\Roberto\\REACT\\react-hooks\\src\\reportWebVitals.js":"3","D:\\Roberto\\REACT\\react-hooks\\src\\components\\Header.jsx":"4","D:\\Roberto\\REACT\\react-hooks\\src\\components\\Characters.jsx":"5","D:\\Roberto\\REACT\\react-hooks\\src\\context\\ThemeContext.js":"6","D:\\Roberto\\REACT\\react-hooks\\src\\components\\Search.jsx":"7","D:\\Roberto\\REACT\\react-hooks\\src\\hooks\\useCharacters.js":"8"},{"size":500,"mtime":1612833184597,"results":"9","hashOfConfig":"10"},{"size":853,"mtime":1612833290348,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":611,"mtime":1611682905226,"results":"13","hashOfConfig":"10"},{"size":4443,"mtime":1612822004004,"results":"14","hashOfConfig":"10"},{"size":111,"mtime":1611673384920,"results":"15","hashOfConfig":"10"},{"size":258,"mtime":1612586846565,"results":"16","hashOfConfig":"10"},{"size":408,"mtime":1612818765837,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"m3bt4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Roberto\\REACT\\react-hooks\\src\\index.js",[],["36","37"],"D:\\Roberto\\REACT\\react-hooks\\src\\App.js",[],"D:\\Roberto\\REACT\\react-hooks\\src\\reportWebVitals.js",[],"D:\\Roberto\\REACT\\react-hooks\\src\\components\\Header.jsx",[],"D:\\Roberto\\REACT\\react-hooks\\src\\components\\Characters.jsx",["38"],"import React, { useState, useContext, useReducer, useMemo, useRef, useCallback } from \"react\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport Search from \"../components/Search\";\r\nimport useCharacters from \"../hooks/useCharacters\";\r\n\r\nconst initialState = {\r\n  favoritesarray: [],\r\n};\r\n\r\nconst API = \"https://rickandmortyapi.com/api/character/\";\r\n\r\n//Usando reducer se van a agregar las cartas seleccionadas a los favoritos\r\n//El dispatch transmite la informacion al estado\r\nconst favoriteReducer = (state, action) => {\r\n  debugger;\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAVORITE\":\r\n      let favoriteexist = state.favoritesarray.filter((user) => user.id === action.payload.id);\r\n      if (favoriteexist.length > 0) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          favoritesarray: [...state.favoritesarray, action.payload],\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Characters = (params) => {\r\n  //This line was moved to a new component\r\n  //const [characters, setcharacters] = useState([]);\r\n  const [theme, settheme] = useContext(ThemeContext);\r\n  //Creates the hook to the reducer\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n\r\n  const characters = useCharacters(API);\r\n\r\n  const [search, setsearch] = useState(\"\");\r\n  const searchInput = useRef(null);\r\n\r\n  //This uas moved to a new component\r\n  // useEffect(() => {\r\n  //   fetch(\"https://rickandmortyapi.com/api/character/\")\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => setcharacters(data.results));\r\n  // }, []);\r\n\r\n  //Calls the reduce dispatch\r\n  const handleClick = (favorite) => {\r\n    dispatch({ type: \"ADD_TO_FAVORITE\", payload: favorite });\r\n  };\r\n\r\n  // const handleSearch = (event) => {\r\n  //   setsearch(event.target.value);\r\n  // };\r\n\r\n  // //Se reemplaza la funcion para usar el useRef, mas facil en el uso de los formularios\r\n  // const handleSearch = () => {\r\n  //   setsearch(searchInput.current.value);\r\n  // };\r\n\r\n  //Se vuelve a reemplazar para usar usecallback\r\n  const handleSearch = useCallback(() => {\r\n    setsearch(searchInput.current.value);\r\n  }, []);\r\n\r\n  // const filteredUsers = characters.filter((user) => {\r\n  //   return user.name.toLowerCase().includes(search.toLowerCase());\r\n  // });\r\n\r\n  const filteredUsers = useMemo(\r\n    () =>\r\n      characters.filter((user) => {\r\n        return user.name.toLowerCase().includes(search.toLowerCase());\r\n      }),\r\n    [characters, search]\r\n  );\r\n\r\n  return (\r\n    // <div className={params.mode ? \"Characters light\" : \"Characters dark\"}>\r\n    <div>\r\n      <h3>My Favorites</h3>\r\n      {favorites.favoritesarray.map((favorite) => (\r\n        <li key={favorite.id}>{favorite.name}</li>\r\n      ))}\r\n      <hr />\r\n      <h3>Full List</h3>\r\n      <Search search={search} searchInput={searchInput} handleSearch={handleSearch} />\r\n      <div className={`Characters ${theme}`}>\r\n        {filteredUsers.map((character) => (\r\n          <div key={character.id} className=\"Cards\">\r\n            <div className=\"flip-card-inner\">\r\n              {/* <div className={params.mode ? \" light flip-card-front\" : \"dark flip-card-front\"}> */}\r\n              <div className={`flip-card-front ${theme}`}>\r\n                <h2>{character.name}</h2>\r\n                <div className=\"parent\">\r\n                  <div className=\"clip\" style={{ backgroundImage: `url(${character.image})` }}></div>\r\n                  <div className=\"image\" style={{ backgroundImage: `url(${character.image})` }}></div>\r\n                </div>\r\n                <p>\r\n                  <b>Species:</b>\r\n                  {character.species}\r\n                </p>\r\n              </div>\r\n              {/* <div className={params.mode ? \"light flip-card-back\" : \" dark flip-card-back\"}> */}\r\n              <div className={`flip-card-back ${theme}`}>\r\n                <b>Origin: </b>\r\n                <p>{character.origin.name}</p>\r\n                <b>Location: </b>\r\n                <p>{character.location.name}</p>\r\n                <p>\r\n                  <b>Created: </b>\r\n                  {character.created}\r\n                </p>\r\n                <button type=\"button\" onClick={() => handleClick(character)}>\r\n                  Make Favorite\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","D:\\Roberto\\REACT\\react-hooks\\src\\context\\ThemeContext.js",[],"D:\\Roberto\\REACT\\react-hooks\\src\\components\\Search.jsx",[],"D:\\Roberto\\REACT\\react-hooks\\src\\hooks\\useCharacters.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":35,"column":17,"nodeType":"45","messageId":"46","endLine":35,"endColumn":25},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'settheme' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]